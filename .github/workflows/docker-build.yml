name: Docker image build

on: 
  workflow_dispatch:
    branches:
      - main
    inputs:
      build_option:
        description: 'Build/push option'
        required: true
        default: 'Build latest commit'
        type: choice
        options:
        - 'Build latest commit'
        - 'Build existing version'
        - 'Build + publish existing version'
      version:
        description: 'Version number: "v*.*.*" 
                      (latest version if not specified)'
        required: false

  push:
    tags:
      - 'v*.*.*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout current repository to get latest version
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Needed to get tags information
          
      - name: Get latest version
        run: |
          echo "LATEST_VERSION=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV
          
      - name: Set version for manual trigger
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [[ "${{ github.event.inputs.version }}" == "" ]]; then
            echo "VERSION=${{env.LATEST_VERSION}}" >> $GITHUB_ENV
          else
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Set version for tag trigger 
        if: startsWith(github.ref, 'refs/tags/v')
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV 

      - name: Set commit tag
        run: |
          if [[ "${{ github.event.inputs.build_option }}" == \
                                        "Build latest commit" ]]; then
            echo "COMMIT_TAG=" >> $GITHUB_ENV
          else
            echo "COMMIT_TAG=${{ env.VERSION }}" >> $GITHUB_ENV
          fi

      - name: Checkout the specified commit
        uses: actions/checkout@v3
        with:
          ref: ${{ env.COMMIT_TAG }}
          submodules: 'recursive'
          
      - name: Get commit hash for version
        run: |
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Decide whether to push the image to ghcr.io
        run: |
          if [[ "${{ github.event.inputs.build_option }}" == \
                          "Build + publish existing version" ]] || 
             [[ "${{ github.event_name }}" == "push" ]]; then
            echo "PUSH=true" >> $GITHUB_ENV 
          else
            echo "PUSH=false" >> $GITHUB_ENV
          fi

      - name: Determine image tags
        env: 
          IMAGE_TAGS: "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
        run: |
          if [ "${{ env.VERSION }}" == "${{ env.LATEST_VERSION }}" ]; then
            echo "IMAGE_TAGS=${{ env.IMAGE_TAGS }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
          else
            echo "IMAGE_TAGS=${{ env.IMAGE_TAGS }}" >> $GITHUB_ENV
          fi


      - name: Build (and push) Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ env.PUSH }}
          tags: |
            ${{ env.IMAGE_TAGS }}

