name: Manual Push Package

on: 
  workflow_dispatch:
    branches:
      - main
    inputs:
      version:
        description: 'Tag to build Docker image for'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      - name: Checkout current repository to get latest version
        uses: actions/checkout@v3
          
      - name: Get latest version
        id: get-latest-version
        run: |
          git rev-parse --short HEAD
          echo "LATEST_VERSION=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV
          echo "$(git describe --abbrev=0 --tags)"
          
      - name: Checkout the specified version
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.version }}
          submodules: 'recursive'
          
      - name: Get commit hash for version
        id: get-commit-hash
        run: echo "SHORT_COMMIT=$(git rev-parse --short=7 ${{ github.event.inputs.version }})" >> $GITHUB_ENV
        
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository }}:${{ github.event.inputs.version }}
            ${{ env.REGISTRY }}/${{ github.repository }}:sha-${{ env.SHORT_COMMIT }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Tag image as latest (if applicable)
        if: success() && ${{ github.event.inputs.version == env.LATEST_VERSION }}
        run: |
          echo ${{ github.event.inputs.version }}
          echo ${{ env.LATEST_VERSION }}
          echo "Tagging with latest"
          docker tag ghcr.io/${{ github.repository }}:${{ github.event.inputs.version }} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
          

